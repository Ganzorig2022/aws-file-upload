import Gallery from '@/components/Gallery';
import axios from 'axios';
import Head from 'next/head';
import React, { useState } from 'react';

export default function Home() {
  const [loading, setLoading] = useState(false);
  const [fileData, setFileData] = useState({
    fileName: '',
    contentType: '',
  });
  const [selectedFile, setSelectedFile] = useState(null);
  const [headerType, setHeaderType] = useState('');
  const [imageURLs, setImageURLs] = useState<string[]>([]);
  const [imageName, setImageName] = useState<string[]>([]);

  const bucketName = 'ganzo-s3-bucket';

  // 1) Get image data from input
  const onGetFiles = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (!e.target.files) return;

    setSelectedFile(e.target.files[0] as any);

    const contentType = e.target.files[0].type; // "image/png" will return

    setHeaderType(contentType);

    const fileName = e.target.files[0].name; // "car.png" will return

    setFileData((prev) => ({ ...prev, fileName, contentType }));
  };

  // 2) Upload to AWS S3
  const uploadToS3 = async () => {
    setLoading(true);

    try {
      if (fileData.fileName === '')
        return alert('Please choose a file to upload first.');

      // AWS endpoint comes here...
      const endpoint =
        'https://6d6zx1x3pb.execute-api.us-east-1.amazonaws.com/dev/upload';

      const response = await axios.post(endpoint, { bucketName, ...fileData });

      const preSignUrl = response.data?.preSignUrl;

      if (preSignUrl) {
        // last step for image upload on AWS S3 by using pre-signed URL
        await axios.put(preSignUrl, selectedFile, {
          headers: { 'Content-Type': headerType }, // "image/png"
        });

        setLoading(false);
      }
    } catch (error: any) {
      console.log('<<<<<<ERROR FROM BACKEND>>>>:', error.message);
    } finally {
      setLoading(false);
    }
  };

  // 3) Get image's metadata list[] and then get download urls
  const getListBuckets = async () => {
    // AWS endpoint comes here...
    try {
      const endpoint =
        'https://6d6zx1x3pb.execute-api.us-east-1.amazonaws.com/dev/image';

      const response = await axios.get(endpoint);

      console.log('<<<<<<LIST BUCKETS FROM BACKEND>>>>:', response.data?.data);

      const { Contents, Name } = response.data?.data;
      // Contents = [{Key: 'ganzo.png" ...}, {...}] will return
      // Name = 'ganzo-s3-bucket" will return

      console.log('Contents>>>>>>>>>>>>>>>>', Contents);

      const Keys = Contents.map((el: { Key: string }) => el.Key); // ['car.jpg', 'car.png' etc.]

      setImageName([...Keys]);

      const downloadURLs = Keys.map(
        (key: string) => `https://${Name}.s3.amazonaws.com/${key}`
      );

      setImageURLs([...downloadURLs]);

      // const fileExtension = fileName.substring(fileName.lastIndexOf('.') + 1); // "png" will return
    } catch (error: any) {
      console.log('<<<<<<ERROR FROM BACKEND>>>>:', error.message);
    } finally {
      setLoading(false);
    }
  };
  // console.log(imageURLs);

  const deleteImage = async () => {
    try {
      const endpoint =
        'https://6d6zx1x3pb.execute-api.us-east-1.amazonaws.com/dev/image';

      const response = await axios.delete(endpoint, {
        data: { bucketName, fileName: 'car.png' },
      });

      console.log('<<<<<<DELETE RESPONSE FROM BACKEND>>>>:', response);
    } catch (error: any) {
      console.log('<<<<<<ERROR FROM BACKEND>>>>:', error.message);
    } finally {
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='flex flex-col items-center justify-center h-screen space-y-5'>
        <input
          type='file'
          className='file-input file-input-bordered file-input-accent w-full max-w-xs '
          onChange={onGetFiles}
          max='6'
          accept='.jpg,.png,.jpeg'
          multiple
          required
        />
        <button
          className={`btn ${loading ? 'loading' : ''} btn-primary`}
          onClick={uploadToS3}
        >
          UPLOAD SINGLE IMAGE
        </button>
        <button
          className={`btn ${loading ? 'loading' : ''} btn-secondary`}
          // disabled
          onClick={getListBuckets}
        >
          GET LIST BUCKETS
        </button>
        {/* <button
          className={`btn ${loading ? 'loading' : ''} btn-error `}
          // disabled
          onClick={deleteImage}
        >
          DELETE SINGLE IMAGE
        </button> */}

        {/* IMAGE CAROUSEL */}
        <Gallery imageURLs={imageURLs} Keys={imageName} />
      </div>
    </>
  );
}

// Delete multiple objects from an Amazon S3 bucket
//  https://docs.aws.amazon.com/AmazonS3/latest/userguide/example_s3_DeleteObjects_section.html
